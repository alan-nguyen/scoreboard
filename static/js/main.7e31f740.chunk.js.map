{"version":3,"sources":["components/Stats.js","components/Stopwatch.js","components/Header.js","components/Counter.js","components/Icon.js","components/Player.js","components/AddPlayerForm.js","components/App.js","index.js"],"names":["Stats","players","totalPlayers","length","totalPoints","reduce","total","player","score","className","Stopwatch","state","isRunning","elapsedTime","previousTime","tick","now","Date","setState","prevState","handleStopwatch","handleReset","this","intervalID","setInterval","clearInterval","seconds","Math","floor","onClick","Component","Header","title","defaultProps","Counter","index","changeScore","Icon","isHighScore","viewBox","d","transform","width","height","Player","props","name","id","removePlayer","PureComponent","AddPlayerForm","playerInput","React","createRef","hanldeSubmit","e","preventDefault","addPlayer","current","value","currentTarget","reset","onSubmit","type","ref","placeholder","App","prevPlayerId","handleScoreChange","delta","updatedPlayers","updatedPlayer","handleAddPlayer","handleRemovePlayer","filter","p","getHighScore","scores","map","highScore","max","toString","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7e31f740.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Stats = ({ players }) => {\n  const totalPlayers = players.length;\n  const totalPoints = players.reduce((total, player) => {\n    return total + player.score;\n  }, 0);\n\n  return (\n    <table className=\"stats\">\n      <tbody>\n        <tr>\n          <td>Players:</td>\n          <td>{totalPlayers}</td>\n        </tr>\n        <tr>\n          <td>Total Points:</td>\n          <td>{totalPoints}</td>\n        </tr>\n      </tbody>\n    </table>\n  );\n};\n\nStats.propTypes = {\n  players: PropTypes.arrayOf(\n    PropTypes.shape({\n      score: PropTypes.number,\n    })\n  ),\n};\n\nexport default Stats;\n","import React, { Component } from 'react';\n\nclass Stopwatch extends Component {\n  state = {\n    isRunning: false,\n    elapsedTime: 0,\n    previousTime: 0,\n  };\n\n  componentDidMount() {\n    this.intervalID = setInterval(() => this.tick(), 100);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.intervalID);\n  }\n\n  tick = () => {\n    if (this.state.isRunning) {\n      const now = Date.now();\n      this.setState((prevState) => ({\n        previousTime: now,\n        elapsedTime: prevState.elapsedTime + (now - this.state.previousTime),\n      }));\n    }\n  };\n\n  handleStopwatch = () => {\n    this.setState((prevState) => ({\n      isRunning: !prevState.isRunning,\n    }));\n    if (!this.state.isRunning) {\n      this.setState({ previousTime: Date.now() });\n    }\n  };\n\n  handleReset = () => {\n    this.setState({ elapsedTime: 0 });\n  };\n\n  render() {\n    const seconds = Math.floor(this.state.elapsedTime / 1000);\n\n    return (\n      <div className=\"stopwatch\">\n        <h2>Stopwatch</h2>\n        <span className=\"stopwatch-time\">{seconds}</span>\n        <button onClick={this.handleStopwatch}>\n          {this.state.isRunning ? 'Stop' : 'Start'}\n        </button>\n        <button onClick={this.handleReset}>Reset</button>\n      </div>\n    );\n  }\n}\n\nexport default Stopwatch;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Stats from './Stats';\nimport Stopwatch from './Stopwatch';\n\nconst Header = ({ players, title }) => {\n  return (\n    <header>\n      <Stats players={players} />\n      <h1>{title}</h1>\n      <Stopwatch />\n    </header>\n  );\n};\n\nHeader.propTypes = {\n  title: PropTypes.string,\n  player: PropTypes.arrayOf(PropTypes.object),\n};\n\nHeader.defaultProps = {\n  title: 'Scoreboard',\n};\nexport default Header;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\n// Stateless component, just takes in props\nconst Counter = ({ index, score, changeScore }) => {\n  return (\n    <div className=\"counter\">\n      <button\n        className=\"counter-action decrement\"\n        onClick={() => changeScore(index, -1)}\n      >\n        {' '}\n        -{' '}\n      </button>\n      <span className=\"counter-score\">{score}</span>\n      <button\n        className=\"counter-action increment\"\n        onClick={() => changeScore(index, 1)}\n      >\n        {' '}\n        +{' '}\n      </button>\n    </div>\n  );\n};\n\nCounter.propTypes = {\n  index: PropTypes.number,\n  score: PropTypes.number,\n  changeScore: PropTypes.func,\n};\n\nexport default Counter;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Icon = ({ isHighScore }) => {\n  return (\n    <svg className={isHighScore ? 'is-high-score' : null} viewBox=\"0 0 44 35\">\n      <path\n        d=\"M26.7616 10.6207L21.8192 0L16.9973 10.5603C15.3699 14.1207 10.9096 15.2672 7.77534 12.9741L0 7.24138L6.56986 28.8448H37.0685L43.5781 7.72414L35.7425 13.0948C32.6685 15.2672 28.3288 14.0603 26.7616 10.6207Z\"\n        transform=\"translate(0 0.301727)\"\n      />\n      <rect\n        width=\"30.4986\"\n        height=\"3.07759\"\n        transform=\"translate(6.56987 31.5603)\"\n      />\n    </svg>\n  );\n};\n\nIcon.propTypes = {\n  isHighScore: PropTypes.bool,\n};\n\nexport default Icon;\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport Counter from './Counter';\nimport Icon from './Icon';\n\nclass Player extends PureComponent {\n  static propTypes = {\n    changeScore: PropTypes.func,\n    removePlayer: PropTypes.func,\n    name: PropTypes.string.isRequired,\n    score: PropTypes.number.isRequired,\n    id: PropTypes.number,\n    index: PropTypes.number,\n    isHighScore: PropTypes.bool,\n  };\n\n  render() {\n    const {\n      name,\n      id,\n      score,\n      index,\n      removePlayer,\n      changeScore,\n      isHighScore,\n    } = this.props;\n    return (\n      <div className=\"player\">\n        <span className=\"player-name\">\n          <button className=\"remove-player\" onClick={() => removePlayer(id)}>\n            âœ–\n          </button>\n          <Icon isHighScore={isHighScore} />\n          {name}\n        </span>\n\n        <Counter score={score} index={index} changeScore={changeScore} />\n      </div>\n    );\n  }\n}\n\nexport default Player;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass AddPlayerForm extends Component {\n  static propTypes = {\n    addPlayer: PropTypes.func,\n  };\n\n  playerInput = React.createRef();\n\n  hanldeSubmit = (e) => {\n    e.preventDefault();\n    this.props.addPlayer(this.playerInput.current.value);\n    // Clear input after submit\n    e.currentTarget.reset();\n  };\n\n  render() {\n    return (\n      <form onSubmit={this.hanldeSubmit}>\n        <input\n          type=\"text\"\n          ref={this.playerInput}\n          placeholder=\"Enter a player's name\"\n        />\n\n        <input type=\"submit\" value=\"Add Player\" />\n      </form>\n    );\n  }\n}\n\nexport default AddPlayerForm;\n","import React, { Component } from 'react';\nimport Header from './Header';\nimport Player from './Player';\nimport AddPlayerForm from './AddPlayerForm';\n\nclass App extends Component {\n  state = {\n    players: [\n      {\n        name: 'Alan',\n        score: 0,\n        id: 1,\n      },\n      {\n        name: 'Treasure',\n        score: 0,\n        id: 2,\n      },\n      {\n        name: 'Ashley',\n        score: 0,\n        id: 3,\n      },\n      {\n        name: 'James',\n        score: 0,\n        id: 4,\n      },\n    ],\n  };\n\n  // player id counter\n  prevPlayerId = 4;\n\n  handleScoreChange = (index, delta) => {\n    this.setState((prevState) => {\n      // New 'players' array â€“ a copy of the previous `players` state\n      const updatedPlayers = [...prevState.players];\n      // A copy of the player object we're targeting\n      const updatedPlayer = { ...updatedPlayers[index] };\n\n      // Update the target player's score\n      updatedPlayer.score += delta;\n      // Update the 'players' array with the target player's latest score\n      updatedPlayers[index] = updatedPlayer;\n\n      // Update the `players` state without mutating the original state\n      return {\n        players: updatedPlayers,\n      };\n    });\n  };\n\n  handleAddPlayer = (name) => {\n    this.setState((prevState) => {\n      return {\n        players: [\n          ...prevState.players,\n          {\n            name,\n            score: 0,\n            id: (this.prevPlayerId += 1),\n          },\n        ],\n      };\n    });\n  };\n\n  handleRemovePlayer = (id) => {\n    this.setState((prevState) => {\n      return {\n        players: prevState.players.filter((p) => p.id !== id),\n      };\n    });\n  };\n\n  getHighScore = () => {\n    const scores = this.state.players.map((p) => p.score);\n    const highScore = Math.max(...scores);\n    if (highScore) {\n      return highScore;\n    }\n    return null;\n  };\n\n  render() {\n    const highScore = this.getHighScore();\n\n    return (\n      <div className=\"scoreboard\">\n        <Header players={this.state.players} />\n\n        {/* Players list */}\n        {this.state.players.map((player, index) => (\n          <Player\n            name={player.name}\n            score={player.score}\n            id={player.id}\n            key={player.id.toString()}\n            index={index}\n            changeScore={this.handleScoreChange}\n            removePlayer={this.handleRemovePlayer}\n            isHighScore={highScore === player.score}\n          />\n        ))}\n\n        <AddPlayerForm addPlayer={this.handleAddPlayer} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './components/App';\nimport './index.css';\n\nReactDOM.render(\n  <App />, \n  document.getElementById('root')\n);\n"],"sourceRoot":""}